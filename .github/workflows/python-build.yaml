name: Python Building

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, windows]
        include:
          - build: linux
            os: ubuntu-22.04
          - build: windows
            os: windows-2019
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x' # Use the Python version you need to build your project
        architecture: 'x64'  # Use the architecture of your choice
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller # Install PyInstaller module
    - name: Build executable (jtc-adh-cmd-plus.py)
      run: pyinstaller --onefile jtc-adh-cmd-plus.py --distpath dist/${{ matrix.os }}
    - name: Build executable (jtc-adh-cmd-plus2.py)
      run: pyinstaller --onefile jtc-adh-cmd-plus2.py --distpath dist/${{ matrix.os }}
    - name: Build executable (jtc-adh-cmd.py)
      run: pyinstaller --onefile jtc-adh-cmd.py  --distpath dist/${{ matrix.os }}
    - name: Build executable (jtc-adh-easy.py)
      run: pyinstaller --onefile jtc-adh-easy.py  --distpath dist/${{ matrix.os }}
    - name: Build executable (merge_csv.py)
      run: pyinstaller --onefile merge_csv.py  --distpath dist/${{ matrix.os }}
    - name: Build executable (scan-to-config.py)
      run: pyinstaller --onefile scan-to-config.py  --distpath dist/${{ matrix.os }}
    - name: Build executable (split_csv.py)
      run: pyinstaller --onefile split_csv.py  --distpath dist/${{ matrix.os }}
    - name: Build executable (split_json-adh.py)
      run: pyinstaller --onefile split_json-adh.py  --distpath dist/${{ matrix.os }}
    - name: Build executable (split_json.py)
      run: pyinstaller --onefile split_json.py  --distpath dist/${{ matrix.os }}
    - name: Build executable (split_txt.py)
      run: pyinstaller --onefile split_txt.py  --distpath dist/${{ matrix.os }}
    - name: Build executable (sub-adh.py)
      run: pyinstaller --onefile sub-adh.py  --distpath dist/${{ matrix.os }}
    - name: Upload-Windows
      uses: actions/upload-artifact@v2
      with:
        name: build-Windows
        path: dist/windows-2019/*
    - name: Upload-Ubuntu
      uses: actions/upload-artifact@v2
      with:
        name: build-Ubuntu
        path: dist/ubuntu-22.04/*