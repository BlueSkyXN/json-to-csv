name: Python Building

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-jtc-adh-cmd-plus:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, windows]
        include:
          - build: linux
            os: ubuntu-22.04
          - build: windows
            os: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          architecture: 'x64'
      # 其他步骤...
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller argparse pandas tqdm --ignore-installed
      - name: Build executable
        run: |
          pyinstaller --onefile --hidden-import argparse --hidden-import pandas --hidden-import os --hidden-import tqdm --hidden-import json --strip jtc-adh-cmd-plus.py --distpath dist/${{ matrix.os }}

      # 其他步骤...
      - name: Set commit message
        id: set_commit
        run: |
         if [ "${{ matrix.os }}" == "ubuntu-22.04" ]; then
         echo "COMMIT_MESSAGE=$(git log --format=%B -1)" >> $GITHUB_ENV
         elif [ "${{ matrix.os }}" == "windows-2019" ]; then
         $commit_message=$(git log --format=%B -1)
         echo "COMMIT_MESSAGE=$commit_message" >> $GITHUB_ENV
         fi
        shell: bash
        env:
          pythonLocation: /opt/hostedtoolcache/Python/3.10.11/x64


      - name: Upload-jtc-adh-cmd-plus-ubuntu-22.04
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        uses: actions/upload-artifact@v2
        with:
          name: build-jtc-adh-cmd-plus-${{ matrix.os }}-v${{ env.COMMIT_MESSAGE }}
          path: dist/ubuntu-22.04/jtc-adh-cmd-plus

      - name: Upload-jtc-adh-cmd-plus-windows-2019
        if: ${{ matrix.os == 'windows-2019' }}
        uses: actions/upload-artifact@v2
        with:
          name: build-jtc-adh-cmd-plus-${{ matrix.os }}-v${{ env.COMMIT_MESSAGE }}
          path: dist/windows-2019/jtc-adh-cmd-plus.exe

  build-jtc-adh-cmd-plus2:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, windows]
        include:
          - build: linux
            os: ubuntu-22.04
          - build: windows
            os: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          architecture: 'x64'
      # 其他步骤...
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller argparse pandas ijson --ignore-installed
      - name: Build executable
        run: |
          pyinstaller --onefile --hidden-import argparse --hidden-import pandas --hidden-import os --hidden-import ijson --hidden-import json --strip jtc-adh-cmd-plus2.py --distpath dist/${{ matrix.os }}
          # 其他 pyinstaller 命令...
      # 其他步骤...
      - name: Get latest commit message
        id: get_commit
        run: |
          echo "::set-output name=message::$(git log --format=%B -1)"

      - name: Upload-jtc-adh-cmd-plus2-ubuntu-22.04
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        uses: actions/upload-artifact@v2
        with:
          name: build-jtc-adh-cmd-plus2-${{ matrix.os }}-v${{ steps.get_commit.outputs.message }}
          path: dist/ubuntu-22.04/jtc-adh-cmd-plus2

      - name: Upload-jtc-adh-cmd-plus-windows-2019
        if: ${{ matrix.os == 'windows-2019' }}
        uses: actions/upload-artifact@v2
        with:
          name: build-jtc-adh-cmd-plus2-${{ matrix.os }}-v${{ steps.get_commit.outputs.message }}
          path: dist/windows-2019/jtc-adh-cmd-plus2.exe
