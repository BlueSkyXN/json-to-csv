name: Python Building Quick Cached

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, windows]
        include:
          - build: linux
            os: ubuntu-22.04
          - build: windows
            os: windows-2019
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        cache: 'pip'
        python-version: '3.10'
        architecture: 'x64' 

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install -r requirements.txt --ignore-installed

    - name: Get pip cache dir
      id: pip-cache
      run: |
        python -m pip cache info --no-python-version-warning | tee /dev/stderr | awk 'match($0, /Location: (.*)/, a) { print "##[set-output name=dir;]" a[1] }'

    - name: Cache Python packages
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-quick-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-quick-
 

    - name: Build executable
      run: |
        pyinstaller --onefile --hidden-import argparse --hidden-import os --hidden-import vaex --strip jtc-adh-cmd-ultra-vaex.py  --distpath dist/${{ matrix.os }} 

    - name: Get latest commit message
      id: get_commit
      run: |
        echo "::set-output name=message::$(git log --format=%B -1)"

    - name: Upload-${{ matrix.os }}
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: build-quick-${{ matrix.os }}-${{ steps.get_commit.outputs.message }}
        path: dist/${{ matrix.os }}/*